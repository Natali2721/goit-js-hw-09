{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,SAsBxC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,GACFF,EAAQ,uBAAqBH,QAAiBC,OAE9CG,EAAK,sBAAoBJ,QAAiBC,MAAU,GAErDA,EAAM,G,CA7BbL,EAASa,iBAAiB,UAAUC,IAClCA,EAAEC,iBAKF,IAAIV,EAAQW,OAAOhB,EAASK,MAAMY,OAElC,MAAMC,EAASF,OAAOhB,EAASkB,OAAOD,OAChCE,EAAOH,OAAOhB,EAASmB,KAAKF,OAElC,IAAK,IAAIG,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCjB,EAAciB,EAAGf,GACdgB,MAAKC,GAAUC,EAAAzB,GAAS0B,OAAOC,QAAQH,KACvCI,OAAMC,GAASJ,EAAAzB,GAAS0B,OAAOI,QAAQD,KAE1CtB,GAASc,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formElem = document.querySelector('.form');\n\nformElem.addEventListener('submit', e => {\n  e.preventDefault();\n  //console.log(formElem.delay.value);\n  //console.log(formElem.amount.value);\n  //console.log(formElem.step.value);\n\n  let delay = Number(formElem.delay.value);\n  //console.log(delay);\n  const amount = Number(formElem.amount.value);\n  const step = Number(formElem.step.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(result => Notiflix.Notify.success(result))\n      .catch(error => Notiflix.Notify.failure(error));\n\n    delay += step;\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      //Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n/*\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n\ncreatePromise(2, 100)\n  .then(result => console.log(result))\n  .catch(error => console.log(error));\n  */\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formElem","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","Number","value","amount","step","i","then","result","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.a2c9c87f.js.map"}